name: CI Workflow for Unit Testing

on:
  pull_request:
    branches: [ "main" ]

jobs:
  sap-task:
    runs-on: [ "self-hosted", "prod" ]

    env:
      # GitHub-related variables
      REPO_NAME: ${{ github.repository }}
      GH_USERNAME: ${{ vars.GH_USERNAME }}
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
      
      # Nuve API variables
      BACKUP_ID: ${{ vars.BACKUP_ID }}
      NUVE_API_TOKEN: ${{ secrets.NUVE_API_TOKEN_QA }}

      # SAP-related variables
      ABAP_PACKAGE: ${{ vars.ABAP_PACKAGE }}      

    steps:
    - name: Create Instance
      id: create-instance
      run: |
        nuve-api create --github_sha ${GITHUB_SHA:0:6} --backup_id ${BACKUP_ID} --nuve_api_token ${NUVE_API_TOKEN}

    - name: Set up environment variables
      env:
        # SAP-related variables
        HOST: ${{ env.ip_address }}
        CLIENT: ${{ vars.CLIENT }}
        PORT: ${{ vars.PORT }}
        SAP_USER: ${{ vars.SAP_USER }}
        SAP_PASSWORD: ${{ secrets.SAP_PASSWORD }}
      run: |
        echo "SAPCLI_OPTIONS=--user ${SAP_USER} --password ${SAP_PASSWORD} --ashost ${HOST} --client ${CLIENT} --port ${PORT} --no-ssl" >> $GITHUB_ENV

    - name: Set up SAPCLI configuration
      run: echo "SAPCLI_CONFIG=sapcli ${SAPCLI_OPTIONS}" >> $GITHUB_ENV

    - name: Execute RFC_PING
      run: ${SAPCLI_CONFIG} startrfc RFC_PING

    - name: Link repo
      run: |
        ${SAPCLI_CONFIG} startrfc -c bapi ZABAPGIT_API_RFC_LINK -S=GIT_REPO_URL:https://github.com/$REPO_NAME -S=GIT_USER:${GH_USERNAME} -S=GIT_PASSWORD:${GH_TOKEN} -S=ABAP_PACKAGE:${ABAP_PACKAGE} || true

    - name: Set and pull branch under test
      run: |
        ${SAPCLI_CONFIG} startrfc -c bapi ZABAPGIT_API_RFC_SWITCHBRANCH -S=ABAP_PACKAGE:${ABAP_PACKAGE} -S=GIT_USER:${GH_USERNAME} -S=GIT_PASSWORD:${GH_TOKEN} -S=BRANCH_NAME:${{ github.head_ref }}
        ${SAPCLI_CONFIG} startrfc -c bapi ZABAPGIT_API_RFC_PULL -S=ABAP_PACKAGE:${ABAP_PACKAGE} -S=GIT_USER:${GH_USERNAME} -S=GIT_PASSWORD:${GH_TOKEN}

    - name: Run ABAP Unit
      run: |
        ${SAPCLI_CONFIG} startrfc -c bapi ZFM_RUN_ABAP_UNIT -S=IM_OBJECT_NAME_V:${ABAP_PACKAGE}

    - name: Delete Instance (if exists)
      if: always()
      run: |
        instance_id=${{ env.instance_id }}
        if [ "$instance_id" ]; then
          nuve-api delete --instance_id ${instance_id} --nuve_api_token ${NUVE_API_TOKEN}
        fi
